
class Solution {
  public:
    Node *insertAtEnd(Node *head, int x) {
     
        Node* newNode = new Node(x);
        
        // Step 2: If list is empty, new node becomes head
        if (head == nullptr) {
            return newNode;
        }
        
      
        Node* current = head;
        while (current->next != nullptr) {
            current = current->next;
        }
   
        current->next = newNode;
        
  
        return head;
    }
};
